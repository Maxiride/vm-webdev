# HTTP server
# hide nginx version
server_tokens off;

# http header rewrite (for websocket requests)
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {

    # ==Bind==
    listen      80;
    server_name localhost; #(domain)

    # ==Options==
    charset     utf-8;
    sendfile    off; #(disable cache)
    #client_max_body_size 75M; #(max upload size)

    # ==Logging==
    #access_log /var/log/nginx/log/host.access.log  main;

    # ==Error Pages==
    # HTTP status code to page mappings
    error_page  404              /404.html; #(goes to <domain>/404.html)
    # redirect server error pages to the static page /50x.html
    error_page  500 502 503 504  /50x.html;
    #location = /50x.html {
    #   root  /usr/share/nginx/html; #(already mapped to /www in vm)
    #}

    # ==Root(static web)==
    location / {
        root    /usr/share/nginx/html; #(already mapped to /www in vm)
        index   index.html index.htm;
    }
    
    # ==Websocket(realtime com)==
    # websocket request protocol upgrade (e.g using primus in nodejs)
    location /primus/ {
        proxy_pass  http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header    Upgrade $http_upgrade; #(see mapping above)
        proxy_set_header    Connection $connection_upgrade; #(see mapping above)

        # proxy headers for additional info
        proxy_set_header    HOST $host;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
    }    

    # ==Any(HTTP)==
    # proxy ANY scripts to another HTTP server listening on 127.0.0.1:80
    #
    #location ~ \.xyz$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # ==Python(uWSGI)==
    # proxy to uWSGI server listening on domain socket at /tmp/uwsgi.sock
    #
    #location /api/ {
    #   uwsgi_pass  unix:///tmp/uwsgi.sock; 
    # or
    #   uwsgi_pass  127.0.0.1:3031;
    #   include     uwsgi_params;
    #}

    # ==PHP(FastCGI)==
    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root    /usr/share/nginx/html/php; #(already mapped to /www/php in vm)
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # ==Security(deny static file access)==
    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

